{"version":3,"sources":["Pages/helper.js","assets/short_notification.mp3","assets/right.svg","assets/wrong.svg","utill/firebase.js","assets/logo.png","components/header.js","Pages/Getusers.js","Pages/QrCodeReader.js","App.js","reportWebVitals.js","index.js"],"names":["require","axios","exports","greenpassDecode","decodedGreenpass","post","data","then","response","console","log","catch","error","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","analytics","Header","setisNewNotification","getNotifications","setCloseModel","setCloseSettingModel","isNewNotification","history","useHistory","Fragment","p","onClick","push","src","logo","width","height","className","size","color","style","backgroundColor","cursor","class","fontWeight","GetAllUsers","useState","openModel","openModelSetting","username","setUsername","fiscale","setFiscale","type","setType","datefrom","setDatefrom","dateto","setDateto","isUserSaved","isValid","hour","moment","format","date","setData","notifications","useSound","beep","interrupt","play","page","firsttime","setfirsttime","a","deleteData","Date","getTime","database","ref","once","snapshot","users_ref","val","key","server_timestamp","remove","closeModel","closeModelSetting","user","codice_fiscale","user_type","child","update","useEffect","on","users","userList","id","length","map","item","py","px","fontSize","message","variant","colorScheme","textAlign","right","margin","wrong","isOpen","onClose","columns","spacing","value","onChange","e","target","placeholder","bg","_focus","_hover","saveUser","boxShadow","mt","mr","deleteAllData","QrCodeReader","result","setResult","method","url","delay","onError","err","onScan","headers","App","exact","path","component","GetUsers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10687c00.chunk.js","sourcesContent":["const base45 = require(\"base45\");\r\nconst cbor = require(\"cbor\");\r\nconst fs = require(\"fs\");\r\nconst jpeg = require(\"jpeg-js\");\r\nconst jsQR = require(\"jsqr\");\r\nconst pako = require(\"pako\");\r\nconst axios = require(\"axios\");\r\n\r\nexports.greenpassDecode = (decodedGreenpass) => {\r\n  axios\r\n    .post(\"http://localhost:6000\", {\r\n      data: decodedGreenpass,\r\n    })\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/short_notification.ecfc40b5.mp3\";","export default __webpack_public_path__ + \"static/media/right.274cbc55.svg\";","export default __webpack_public_path__ + \"static/media/wrong.a118e9c6.svg\";","import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCm6d6uLKvgkSl-3-2aKrpOSZjscsf-by8\",\r\n    authDomain: \"monitoring-app-ad983.firebaseapp.com\",\r\n    projectId: \"monitoring-app-ad983\",\r\n    storageBucket: \"monitoring-app-ad983.appspot.com\",\r\n    messagingSenderId: \"315767041890\",\r\n    appId: \"1:315767041890:web:29979f563519944530c63b\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics()\r\nexport default firebase;\r\n","export default __webpack_public_path__ + \"static/media/logo.c2fda636.png\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Flex,\r\n  SimpleGrid,\r\n  Text,\r\n  Spacer,\r\n  Box,\r\n  Heading,\r\n  Input,\r\n  Circle,\r\n  HStack,\r\n  Button,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  FormControl,\r\n  FormLabel,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n} from \"@chakra-ui/react\";\r\nimport { MdNotificationsNone, MdSettings, MdAdd } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport useSound from \"use-sound\";\r\nimport beep from \"./../assets/short_notification.mp3\";\r\nimport logo from \"./../assets/logo.png\";\r\nimport wrong from \"./../assets/wrong.svg\";\r\nimport {\r\n  AiFillStepForward,\r\n  AiFillStepBackward,\r\n  AiOutlineUserAdd,\r\n} from \"react-icons/ai\";\r\nimport { BiBarcodeReader } from \"react-icons/bi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../utill/firebase\";\r\n\r\nconst Header = ({\r\n  setisNewNotification,\r\n  getNotifications,\r\n  setCloseModel,\r\n  setCloseSettingModel,\r\n  isNewNotification,\r\n}) => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Flex p=\"5\">\r\n        <Box p=\"2\">\r\n          <img\r\n            onClick={() => history.push(\"/\")}\r\n            src={logo}\r\n            width=\"150\"\r\n            height=\"150\"\r\n          />\r\n        </Box>\r\n        <Spacer />\r\n        <Box>\r\n          <HStack>\r\n            <Popover className=\"popover__\">\r\n              <PopoverTrigger>\r\n                <Circle\r\n                  size=\"40px\"\r\n                  color=\"white\"\r\n                  style={{ backgroundColor: \"#B2F5EA\", cursor: \"pointer\" }}\r\n                >\r\n                  {isNewNotification ? (\r\n                    <div class=\"icon\">\r\n                      <MdNotificationsNone\r\n                        size=\"30px\"\r\n                        onClick={() => setisNewNotification(false)}\r\n                        style={{ color: \"black\" }}\r\n                      />\r\n                      <div class=\"txt\"></div>\r\n                    </div>\r\n                  ) : (\r\n                    <MdNotificationsNone\r\n                      style={{ color: \"black\" }}\r\n                      size=\"30px\"\r\n                    />\r\n                  )}\r\n                </Circle>\r\n              </PopoverTrigger>\r\n              <PopoverContent>\r\n                <PopoverHeader fontWeight=\"semibold\">\r\n                  Notifications\r\n                </PopoverHeader>\r\n                <PopoverArrow />\r\n                <PopoverCloseButton />\r\n                <PopoverBody>{getNotifications()}</PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n            <Circle\r\n              size=\"40px\"\r\n              color=\"white\"\r\n              style={{ backgroundColor: \"#B2F5EA\", cursor: \"pointer\" }}\r\n              onClick={() => setCloseModel(true)}\r\n            >\r\n              <MdAdd size=\"30px\" style={{ color: \"black\" }} />\r\n            </Circle>\r\n            <Circle\r\n              size=\"40px\"\r\n              onClick={() => setCloseSettingModel(true)}\r\n              color=\"white\"\r\n              style={{ backgroundColor: \"#B2F5EA\", cursor: \"pointer\" }}\r\n            >\r\n              <MdSettings size=\"30px\" style={{ color: \"black\" }} />\r\n            </Circle>\r\n            <Circle\r\n              size=\"40px\"\r\n              onClick={() => history.push(\"./QrCodeReader\")}\r\n              color=\"white\"\r\n              style={{ backgroundColor: \"#B2F5EA\", cursor: \"pointer\" }}\r\n            >\r\n              <BiBarcodeReader size=\"30px\" style={{ color: \"black\" }} />\r\n            </Circle>\r\n          </HStack>\r\n        </Box>\r\n      </Flex>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Flex,\r\n  SimpleGrid,\r\n  Text,\r\n  Spacer,\r\n  Box,\r\n  Heading,\r\n  Input,\r\n  Circle,\r\n  HStack,\r\n  Button,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  FormControl,\r\n  FormLabel,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n} from \"@chakra-ui/react\";\r\nimport { MdSettings } from \"react-icons/md\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport useSound from \"use-sound\";\r\nimport beep from \"./../assets/short_notification.mp3\";\r\nimport right from \"./../assets/right.svg\";\r\nimport wrong from \"./../assets/wrong.svg\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../utill/firebase\";\r\nimport Header from \"../components/header\";\r\n\r\nconst GetAllUsers = () => {\r\n  const [openModel, setCloseModel] = useState(false);\r\n  const [openModelSetting, setCloseSettingModel] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [fiscale, setFiscale] = useState(\"\");\r\n  const [type, setType] = useState(\"Greenpass\");\r\n  const [datefrom, setDatefrom] = useState();\r\n  const [dateto, setDateto] = useState();\r\n  const [userSaved, isUserSaved] = useState(false);\r\n  const [isValid, setisValid] = useState(false);\r\n  const [isNewNotification, setisNewNotification] = useState(false);\r\n  const [hourSort, setHourSort] = useState(-1);\r\n  const hour = moment().format(\"hh:mm:ss A\");\r\n  const date = moment().format(\"dddd, Do MMMM YYYY\");\r\n  const [data, setData] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [play] = useSound(beep, { interrupt: true });\r\n  const [page, setPage] = useState(0);\r\n  const [firsttime, setfirsttime] = useState(false);\r\n  let history = useHistory();\r\n\r\n  async function deleteData() {\r\n    const deleteData = {\r\n      datefrom: new Date(datefrom).getTime(),\r\n      dateto: new Date(dateto).getTime(),\r\n    };\r\n    console.log(deleteData);\r\n    var usersRef = firebase.database().ref(\"Users\");\r\n    usersRef.once(\"value\").then(function (snapshot) {\r\n      const users_ref = snapshot.val();\r\n      for (var key in users_ref) {\r\n        console.log(users_ref[key].server_timestamp);\r\n        if (\r\n          users_ref[key][\"server_timestamp\"] > deleteData.datefrom &&\r\n          users_ref[key][\"server_timestamp\"] < deleteData.dateto\r\n        ) {\r\n          delete users_ref[key];\r\n          console.log(users_ref);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async function deleteAllData() {\r\n    var adaRef = firebase.database().ref(\"Users\");\r\n    adaRef.remove();\r\n  }\r\n  const closeModel = () => {\r\n    setCloseModel(false);\r\n  };\r\n  const closeModelSetting = () => {\r\n    setCloseSettingModel(false);\r\n  };\r\n  async function saveUser() {\r\n    const user = firebase.database().ref(\"Users\");\r\n\r\n    try {\r\n      const data = {\r\n        username: username,\r\n        codice_fiscale: fiscale,\r\n        user_type: type,\r\n        isValid: isValid,\r\n        hour: hour,\r\n        date: date,\r\n        server_timestamp: {\r\n          \".sv\": \"timestamp\",\r\n        },\r\n      };\r\n      user.push(data);\r\n      const ref = firebase\r\n        .database()\r\n        .ref(\"pushnotificaion\")\r\n        .child(\"-MgqgiJGrRkJNgvviupP\");\r\n      ref.update({\r\n        play: true,\r\n      });\r\n      setCloseModel(false);\r\n      setisNewNotification(true);\r\n      console.log(\"firsttime in saveUser\", firsttime);\r\n      isUserSaved(true);\r\n      setfirsttime(true);\r\n      console.log(\"firsttime in saveUser\", firsttime);\r\n      setUsername(\"\");\r\n\r\n      setFiscale(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const user = firebase.database().ref(\"Users\");\r\n    user.on(\"value\", (snapshot) => {\r\n      const users = snapshot.val();\r\n      const userList = [];\r\n      for (let id in users) {\r\n        userList.push({ id, ...users[id] });\r\n      }\r\n      setData(userList);\r\n      if (firsttime) {\r\n        play();\r\n        setisNewNotification(true);\r\n      } else {\r\n      }\r\n    });\r\n  }, [firsttime]);\r\n\r\n  const getTable = () => {\r\n    // let s_number = 1;\r\n    if (data.length > 0) {\r\n      return data.map((item, key) => {\r\n        return (\r\n          <Tr key={key}>\r\n            <Td>{item.username}</Td>\r\n            <Td>{item.codice_fiscale}</Td>\r\n            <Td>{item.user_type}</Td>\r\n            <Td>\r\n              {item.isValid ? (\r\n                <span>\r\n                  <img\r\n                    src={right}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    style={{ margin: \"auto\" }}\r\n                  />\r\n                </span>\r\n              ) : (\r\n                <span>\r\n                  <img\r\n                    src={wrong}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    style={{ margin: \"auto\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n            </Td>\r\n            <Td>\r\n              {item.isValid ? (\r\n                <span>\r\n                  <img\r\n                    src={right}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    style={{ margin: \"auto\" }}\r\n                  />\r\n                </span>\r\n              ) : (\r\n                <span>\r\n                  <img\r\n                    src={wrong}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    style={{ margin: \"auto\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n            </Td>\r\n            <Td>\r\n              {item.isValid ? (\r\n                <span>\r\n                  <img\r\n                    src={right}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    style={{ margin: \"auto\" }}\r\n                  />\r\n                </span>\r\n              ) : (\r\n                <span>\r\n                  <img\r\n                    src={wrong}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    style={{ margin: \"auto\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n            </Td>\r\n            <Td>{item.hour}</Td>\r\n            <Td>{item.date}</Td>\r\n          </Tr>\r\n        );\r\n      });\r\n    } else {\r\n      return <Tr style={{ textAlign: \"center\" }}>No data found</Tr>;\r\n    }\r\n  };\r\n  const getNotifications = () => {\r\n    if (notifications.length > 0) {\r\n      return notifications.map((item, key) => {\r\n        return (\r\n          <>\r\n            <Box py={\"2\"} px={\"1\"}>\r\n              <Text style={{ fontSize: \"13px\" }}>{item.message}</Text>\r\n              <Flex>\r\n                <Box style={{ fontSize: \"10px\" }}>{item.hour}</Box>\r\n                <Spacer />\r\n                <Box style={{ fontSize: \"10px\" }}>{item.date}</Box>\r\n              </Flex>\r\n            </Box>\r\n            <Divider />\r\n          </>\r\n        );\r\n      });\r\n    } else {\r\n      return <h1>No notifications found</h1>;\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Header\r\n        setisNewNotification={setisNewNotification}\r\n        getNotifications={getNotifications}\r\n        setCloseModel={setCloseModel}\r\n        setCloseSettingModel={setCloseSettingModel}\r\n        isNewNotification={isNewNotification}\r\n      />\r\n\r\n      <Box className=\"boxTable\">\r\n        <Table\r\n          variant=\"striped\"\r\n          colorScheme=\"teal\"\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          <TableCaption>Page {page + 1}</TableCaption>\r\n          <Thead>\r\n            <Tr style={{ textAlign: \"center\" }}>\r\n              {/* <Th>S#</Th> */}\r\n              <Th>Username</Th>\r\n              <Th>Codice Fiscale</Th>\r\n              <Th>Type</Th>\r\n              <Th>Validity</Th>\r\n              <Th>Validity</Th>\r\n              <Th>Validity</Th>\r\n              <Th>Hour</Th>\r\n              <Th>Date</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody style={{ textAlign: \"center\", fontSize: \"14px\" }}>\r\n            {getTable()}\r\n          </Tbody>\r\n        </Table>\r\n      </Box>\r\n      <Modal isOpen={openModel} onClose={closeModel} size=\"md\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>\r\n            <HStack>\r\n              <AiOutlineUserAdd />\r\n              <Text>Add User</Text>\r\n            </HStack>\r\n          </ModalHeader>\r\n          <ModalCloseButton\r\n            onClick={() => closeModel()}\r\n            // _focus={{ boxShadow: \"none\" }}\r\n          />\r\n          <ModalBody>\r\n            <form>\r\n              <SimpleGrid columns={1} spacing={10}>\r\n                <FormControl id=\"username\">\r\n                  <FormLabel>Username</FormLabel>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"fiscale\">\r\n                  <FormLabel>Codice Fiscale</FormLabel>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={fiscale}\r\n                    onChange={(e) => setFiscale(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"type\">\r\n                  <FormLabel>Select type</FormLabel>\r\n                  <Select\r\n                    placeholder=\"Select type\"\r\n                    value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                  >\r\n                    <option value=\"Greenpass\">Greenpass</option>\r\n                    <option value=\"Tampone\">Tampone</option>\r\n                  </Select>\r\n                </FormControl>\r\n                <Button\r\n                  bg=\"green.500\"\r\n                  _focus={{ backgroundColor: \"green.500\" }}\r\n                  _hover={{ backgroundColor: \"green.500\" }}\r\n                  onClick={() => saveUser()}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </SimpleGrid>\r\n            </form>\r\n          </ModalBody>\r\n\r\n          <ModalFooter></ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Modal isOpen={openModelSetting} onClose={closeModelSetting} size=\"md\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>\r\n            <HStack>\r\n              <MdSettings />\r\n              <Text>Settings</Text>\r\n            </HStack>\r\n          </ModalHeader>\r\n          <ModalCloseButton\r\n            onClick={() => closeModelSetting()}\r\n            _focus={{ boxShadow: \"none\" }}\r\n          />\r\n          <ModalBody>\r\n            <form>\r\n              <SimpleGrid columns={2} spacing={10}>\r\n                <FormControl id=\"\">\r\n                  <FormLabel>Enter Date From</FormLabel>\r\n                  <Input\r\n                    type=\"date\"\r\n                    value={datefrom}\r\n                    onChange={(e) => setDatefrom(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"\">\r\n                  <FormLabel>Enter Date To</FormLabel>\r\n                  <Input\r\n                    type=\"date\"\r\n                    value={dateto}\r\n                    onChange={(e) => setDateto(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </SimpleGrid>\r\n              <Box textAlign=\"center\">\r\n                <Button\r\n                  bg=\"red.500\"\r\n                  _focus={{ backgroundColor: \"red.500\" }}\r\n                  _hover={{ backgroundColor: \"red.500\" }}\r\n                  onClick={() => deleteData()}\r\n                  mt={5}\r\n                  mr={2}\r\n                  width=\"135px\"\r\n                >\r\n                  Delete data\r\n                </Button>\r\n                <Button\r\n                  bg=\"red.500\"\r\n                  _focus={{ backgroundColor: \"red.500\" }}\r\n                  _hover={{ backgroundColor: \"red.500\" }}\r\n                  onClick={() => deleteAllData()}\r\n                  mt={5}\r\n                >\r\n                  Delete all data\r\n                </Button>\r\n              </Box>\r\n            </form>\r\n          </ModalBody>\r\n\r\n          <ModalFooter></ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default GetAllUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MdSettings } from \"react-icons/md\";\r\nimport {\r\n  Flex,\r\n  SimpleGrid,\r\n  Text,\r\n  Spacer,\r\n  Box,\r\n  HStack,\r\n  Divider,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport moment from \"moment\";\r\nimport useSound from \"use-sound\";\r\nimport beep from \"./../assets/short_notification.mp3\";\r\nimport Header from \"../components/header\";\r\nimport firebase from \"../utill/firebase\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Input,\r\n  FormLabel,\r\n  ModalFooter,\r\n  FormControl,\r\n  ModalCloseButton,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  Select,\r\n  Modal,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport QrReader from \"react-qr-reader\";\r\nimport { greenpassDecode } from \"./helper\";\r\nconst QrCodeReader = () => {\r\n  const [openModel, setCloseModel] = useState(false);\r\n  const [openModelSetting, setCloseSettingModel] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [fiscale, setFiscale] = useState(\"\");\r\n  const [type, setType] = useState(\"Greenpass\");\r\n  const [datefrom, setDatefrom] = useState();\r\n  const [dateto, setDateto] = useState();\r\n  const [userSaved, isUserSaved] = useState(false);\r\n  const [isValid, setisValid] = useState(false);\r\n  const [isNewNotification, setisNewNotification] = useState(false);\r\n  const hour = moment().format(\"hh:mm:ss A\");\r\n  const date = moment().format(\"dddd, Do MMMM YYYY\");\r\n  const [data, setData] = useState([]);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [play] = useSound(beep, { interrupt: true });\r\n  const [firsttime, setfirsttime] = useState(false);\r\n  const [result, setResult] = useState(\r\n    \"HC1: 6BFOXM% TS3DHPVO13J /G-/2YKVA.R/K86PP2FC1J9M$DI9C3 [....] CS62GMVR + B1YM K5MJ1K: K: 2JZLT6KM + DTVKPDUG $ E7F06FA3O6I-VA126Y0\"\r\n  );\r\n  const get = () => {\r\n    console.log(\"asd\");\r\n    axios\r\n      .post(\"http://localhost:6000/decode\", {\r\n        data: result,\r\n        headers: {\r\n          \"Content-Type\": \"application/json; charset=UTF=8\",\r\n          'Accept-Encoding': 'zlib'\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const closeModel = () => {\r\n    setCloseModel(false);\r\n  };\r\n  const closeModelSetting = () => {\r\n    setCloseSettingModel(false);\r\n  };\r\n  async function saveUser() {\r\n    const user = firebase.database().ref(\"Users\");\r\n\r\n    try {\r\n      const data = {\r\n        username: username,\r\n        codice_fiscale: fiscale,\r\n        user_type: type,\r\n        isValid: isValid,\r\n        hour: hour,\r\n        date: date,\r\n        server_timestamp: {\r\n          \".sv\": \"timestamp\",\r\n        },\r\n      };\r\n      user.push(data);\r\n      setCloseModel(false);\r\n      setisNewNotification(true);\r\n      console.log(\"firsttime in saveUser\", firsttime);\r\n      isUserSaved(true);\r\n      setfirsttime(true);\r\n      console.log(\"firsttime in saveUser\", firsttime);\r\n      setUsername(\"\");\r\n      setFiscale(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  async function deleteData() {\r\n    const deleteData = {\r\n      datefrom: datefrom,\r\n      dateto: dateto,\r\n    };\r\n    await axios({\r\n      method: \"delete\",\r\n      url: `/api/users/deletedata`,\r\n      data: deleteData,\r\n    });\r\n  }\r\n\r\n  async function deleteAllData() {\r\n    var adaRef = firebase.database().ref(\"Users\");\r\n    adaRef\r\n      .remove()\r\n      .then(function () {\r\n        console.log(\"Remove succeeded.\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Remove failed: \" + error.message);\r\n      });\r\n  }\r\n  const getNotifications = () => {\r\n    if (notifications.length > 0) {\r\n      return notifications.map((item, key) => {\r\n        return (\r\n          <>\r\n            <Box py={\"2\"} px={\"1\"}>\r\n              <Text style={{ fontSize: \"13px\" }}>{item.message}</Text>\r\n              <Flex>\r\n                <Box style={{ fontSize: \"10px\" }}>{item.hour}</Box>\r\n                <Spacer />\r\n                <Box style={{ fontSize: \"10px\" }}>{item.date}</Box>\r\n              </Flex>\r\n            </Box>\r\n            <Divider />\r\n          </>\r\n        );\r\n      });\r\n    } else {\r\n      return <h1>No notifications found</h1>;\r\n    }\r\n  };\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      setResult(data);\r\n    }\r\n  };\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n  useEffect(() => {\r\n    const user = firebase.database().ref(\"Users\");\r\n    user.on(\"value\", (snapshot) => {\r\n      const users = snapshot.val();\r\n      const userList = [];\r\n      for (let id in users) {\r\n        userList.push({ id, ...users[id] });\r\n      }\r\n      setData(userList);\r\n      if (firsttime) {\r\n        play();\r\n        setisNewNotification(true);\r\n      } else {\r\n      }\r\n    });\r\n  }, [firsttime]);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        setisNewNotification={setisNewNotification}\r\n        getNotifications={getNotifications}\r\n        setCloseModel={setCloseModel}\r\n        setCloseSettingModel={setCloseSettingModel}\r\n        isNewNotification={isNewNotification}\r\n      />\r\n\r\n      <div>\r\n        <QrReader\r\n          delay={300}\r\n          onError={handleError}\r\n          onScan={handleScan}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n        <p>{result}</p>\r\n      </div>\r\n      <Button onClick={() => get()}>click</Button>\r\n      <Modal isOpen={openModel} onClose={closeModel} size=\"md\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>\r\n            <HStack>\r\n              <AiOutlineUserAdd />\r\n              <Text>Add User</Text>\r\n            </HStack>\r\n          </ModalHeader>\r\n          <ModalCloseButton\r\n            onClick={() => closeModel()}\r\n            // _focus={{ boxShadow: \"none\" }}\r\n          />\r\n          <ModalBody>\r\n            <form>\r\n              <SimpleGrid columns={1} spacing={10}>\r\n                <FormControl id=\"username\">\r\n                  <FormLabel>Username</FormLabel>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"fiscale\">\r\n                  <FormLabel>Codice Fiscale</FormLabel>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={fiscale}\r\n                    onChange={(e) => setFiscale(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"type\">\r\n                  <FormLabel>Select type</FormLabel>\r\n                  <Select\r\n                    placeholder=\"Select type\"\r\n                    value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                  >\r\n                    <option value=\"Greenpass\">Greenpass</option>\r\n                    <option value=\"Tampone\">Tampone</option>\r\n                  </Select>\r\n                </FormControl>\r\n                <Button\r\n                  bg=\"green.500\"\r\n                  _focus={{ backgroundColor: \"green.500\" }}\r\n                  _hover={{ backgroundColor: \"green.500\" }}\r\n                  onClick={() => saveUser()}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </SimpleGrid>\r\n            </form>\r\n          </ModalBody>\r\n\r\n          <ModalFooter></ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Modal isOpen={openModelSetting} onClose={closeModelSetting} size=\"md\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>\r\n            <HStack>\r\n              <MdSettings />\r\n              <Text>Settings</Text>\r\n            </HStack>\r\n          </ModalHeader>\r\n          <ModalCloseButton\r\n            onClick={() => closeModelSetting()}\r\n            _focus={{ boxShadow: \"none\" }}\r\n          />\r\n          <ModalBody>\r\n            <form>\r\n              <SimpleGrid columns={2} spacing={10}>\r\n                <FormControl id=\"\">\r\n                  <FormLabel>Enter Date From</FormLabel>\r\n                  <Input\r\n                    type=\"date\"\r\n                    value={datefrom}\r\n                    onChange={(e) => setDatefrom(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl id=\"\">\r\n                  <FormLabel>Enter Date To</FormLabel>\r\n                  <Input\r\n                    type=\"date\"\r\n                    value={dateto}\r\n                    onChange={(e) => setDateto(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </SimpleGrid>\r\n              <Box textAlign=\"center\">\r\n                <Button\r\n                  bg=\"red.500\"\r\n                  _focus={{ backgroundColor: \"red.500\" }}\r\n                  _hover={{ backgroundColor: \"red.500\" }}\r\n                  onClick={() => deleteData()}\r\n                  mt={5}\r\n                  mr={2}\r\n                  width=\"135px\"\r\n                >\r\n                  Delete data\r\n                </Button>\r\n                <Button\r\n                  bg=\"red.500\"\r\n                  _focus={{ backgroundColor: \"red.500\" }}\r\n                  _hover={{ backgroundColor: \"red.500\" }}\r\n                  onClick={() => deleteAllData()}\r\n                  mt={5}\r\n                >\r\n                  Delete all data\r\n                </Button>\r\n              </Box>\r\n            </form>\r\n          </ModalBody>\r\n\r\n          <ModalFooter></ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default QrCodeReader;\r\n","import { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport GetUsers from \"./Pages/Getusers\";\nimport QrCodeReader from \"./Pages/QrCodeReader\";\nimport './App.css'\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={GetUsers}></Route>\n        {/* <Route exact path=\"/users\" component={GetUsers}></Route> */}\n        <Route exact path=\"/QrCodeReader\" component={QrCodeReader}></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// 1. import `ChakraProvider` component\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}